services:
  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
  rabbitmq:
    image: rabbitmq
    ports:
      - "5672:5672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  # service
  booking-service:
    build:
      context: .
      dockerfile: cmd/booking/Dockerfile
    ports:
      - "8080:8080"
    environment:
      MONGODBURI: mongodb://mongo:27017
      MONGODBNAME: housekeeper
      PRICINGSERVICEADDRESS: pricing-service:8081
      SENDSERVICEADDRESS: send-service:8082
    depends_on:
      - mongo
      - pricing-service
      - send-service # Depends on the API, not the worker
    restart: on-failure
  pricing-service:
    build:
      context: .
      dockerfile: cmd/pricing/Dockerfile
    ports:
      - "8081:8081"
    environment:
      PRICING_PORT: 8081
  send-service:
    build:
      context: .
      dockerfile: cmd/send/Dockerfile
    ports:
      - "8082:8082"
    environment:
      RABBITMQURL: amqp://guest:guest@rabbitmq:5672/
      RABBITMQQUEUE: job_queue
    depends_on:
      - rabbitmq
    restart: on-failure

  send-worker:
    build:
      context: .
      dockerfile: cmd/send-worker/Dockerfile
    environment:
      RABBITMQURL: amqp://guest:guest@rabbitmq:5672/
      RABBITMQQUEUE: job_queue
    depends_on:
      - rabbitmq
    deploy:
      replicas: 2
    restart: on-failure
volumes:
  mongo-data: